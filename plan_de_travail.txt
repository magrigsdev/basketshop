Here’s a clear and professional English translation of your work plan:

---

## 📌 Work Plan for the `insert-data` Branch

### 🔹 Task 1: Managing **Users**

➡️ Goal: Insert user data

* **Sub-task 1.1**: Write a **unit test** to verify the insertion of a `User` into the database. 👍

* **Sub-task 1.2**: Implement the `createUser()` function (actual insertion). 👍

* **Sub-task 1.3**: Ensure that the data is properly persisted and retrievable from the database. 👍

* **1.4 Data insertion:** 👍

  * 1.4.1: user
  * 1.4.2: category
  * 1.4.3: product

* **Sub-task 1.5**: Clean up code (in progress) 👷 🚧

* **Sub-task 1.6**: Verify that all tests pass successfully. 🏗️

---

### 🔹 Task 2: **User Login**  ⏳

➡️ Goal: Allow a `User` to log in ⏳

* **Sub-task 2.1**: Write a **functional test** simulating login with valid credentials.
* **Sub-task 2.2**: Write a **functional test** simulating login with invalid credentials.
* **Sub-task 2.3**: Implement the actual login (form + `security.yaml` configuration).
* **Sub-task 2.4**: Verify that login works in real conditions (browser or Postman).

---

### 🔹 Task 3: **User Logout** ⏳

➡️ Goal: Allow a `User` to log out

* **Sub-task 3.1**: Write a **functional test** to ensure a logged-in user can log out.
* **Sub-task 3.2**: Implement the actual logout (route `/logout`).
* **Sub-task 3.3**: Verify in real conditions that logout correctly redirects to `/login`.

---

### 🔹 Task 4: Final Validation ⏳

* **Sub-task 4.1**: Run the **entire PHPUnit test suite** (`php bin/phpunit --testdox --colors=always`).
* **Sub-task 4.2**: Verify the full workflow (insertion → login → logout) in the browser.

---

Would you like me to also **polish it for a GitHub issue or pull request description** (with a more concise checklist style ✅)?
